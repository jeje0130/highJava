package kr.or.ddit.udp;

import java.net.DatagramPacket;
import java.net.DatagramSocket;

/*
 * UDP방식 : 비연결 지향, 신뢰성이 없다. 데이터가 순서대로 도착한다는 보장이 없다
 * 			그렇지만 TCP방식보다 속도가 빠르다.
 * 
 * DatagramSocket객체와 DatagramPacket객체를 이요하여 통신한다.
 * - DatagramSocket : 데이터의 송수신과 관련된 작업을 수행한다.(우체부)
 * - DatagramPacket : 주고받는 데이터와 관련된 작업을 수행한다. (소포)
 * 		==> 수신을 위한 생성자와 송신을 위한 생성자를 따로 제공한다.
 * 
 * TCP의 경우에는 스트림객체를 이용하여 송수신하지만
 * UDP의 경우에는 데이터그램 객체를 이용하여 송수신한다.
 */

public class UdpServer {
	
	public static void main(String[] args) {
		try {
			//통신할 포트번호를 지정하여 소켓을 생성한다.
			DatagramSocket socket = new DatagramSocket(8888);
			
			//수신용 패킷변수와 송신용 패킷변수 선언
			DatagramPacket inPacket, outPacket;
			
			System.out.println("서버 실행 중...");
			
			while(true){
				// 데이터가 저장될 byte형 배열을 선언한다.
				byte[] bMsg = new byte[512];
				
				//수신용 패킷 객체 생성
				//		==> 데이터가 저장될 byte형 배열, 
				//			배열의 길이를 인수값으로 주어서 생성한다.
				inPacket = new DatagramPacket(bMsg, bMsg.length);
				
				
			}
			
			
		} catch (Exception e) {
			// TODO: handle exception
		}
		
	}
	
}



